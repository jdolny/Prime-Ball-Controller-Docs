{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome \u00b6 Download from the Unity Asset Store Playable WebGL Demo Welcome to the official documentation and demo site for the Prime Ball Controller, built with the Unity game engine. The idea for this controller began with a personal project to try and create a Metroid Prime styled game. The first mechanic I wanted to implement was the ball. I figured I would just hop over to the asset store and purchase something that seemed to fit my project. After realizing there wasn't anything that was even close to what I wanted, I decided to create it myself. After I finished the controller, I wanted to make it available to others to hopefully inspire similar games. It's not perfect but accomplishes the goals I set for it. The controller works great for for a wide variety of 3d genres such as puzzle, sidescroller, fps / 3rd person, adventure, etc. It was designed to be very simple to use but with a vast array of options to customize it to your liking.","title":"Welcome"},{"location":"#welcome","text":"Download from the Unity Asset Store Playable WebGL Demo Welcome to the official documentation and demo site for the Prime Ball Controller, built with the Unity game engine. The idea for this controller began with a personal project to try and create a Metroid Prime styled game. The first mechanic I wanted to implement was the ball. I figured I would just hop over to the asset store and purchase something that seemed to fit my project. After realizing there wasn't anything that was even close to what I wanted, I decided to create it myself. After I finished the controller, I wanted to make it available to others to hopefully inspire similar games. It's not perfect but accomplishes the goals I set for it. The controller works great for for a wide variety of 3d genres such as puzzle, sidescroller, fps / 3rd person, adventure, etc. It was designed to be very simple to use but with a vast array of options to customize it to your liking.","title":"Welcome"},{"location":"release-history/","text":"Release History \u00b6 Version 1.1.0 - September 13 2022 \u00b6 Fixes a bug where diagonal movement allowed the player to move faster than the set limit Improves the transition from ball to wheel mode by using a minimum speed value to transition. This prevents the transition from occurring by simply moving the control stick in circles Adds the option to use a free look / first person camera Adds additiional sound capabilities, such as collision and jump land sounds Adds a transparency affect to the sphere when the camera is too close Version 1.0.0 - August 18 2022 \u00b6 Initial Release","title":"Release History "},{"location":"release-history/#release-history","text":"","title":"Release History"},{"location":"release-history/#version-110-september-13-2022","text":"Fixes a bug where diagonal movement allowed the player to move faster than the set limit Improves the transition from ball to wheel mode by using a minimum speed value to transition. This prevents the transition from occurring by simply moving the control stick in circles Adds the option to use a free look / first person camera Adds additiional sound capabilities, such as collision and jump land sounds Adds a transparency affect to the sphere when the camera is too close","title":"Version 1.1.0 - September 13 2022"},{"location":"release-history/#version-100-august-18-2022","text":"Initial Release","title":"Version 1.0.0 - August 18 2022"},{"location":"roadmap/","text":"Roadmap \u00b6 August 2022 was the initial release of this project and there are still some areas that could use improvement. The next release will focus on the cameras, providing better transitions and better overall camera movement.","title":"Roadmap"},{"location":"roadmap/#roadmap","text":"August 2022 was the initial release of this project and there are still some areas that could use improvement. The next release will focus on the cameras, providing better transitions and better overall camera movement.","title":"Roadmap"},{"location":"support/","text":"Support \u00b6 If you need help with Prime Ball Controller or find something that isn't working correctly. Use the Github Issues page for this project.","title":"Help and Support"},{"location":"support/#support","text":"If you need help with Prime Ball Controller or find something that isn't working correctly. Use the Github Issues page for this project.","title":"Support"},{"location":"camera_zones/camera-zone-options/","text":"Camera Zone Options \u00b6 Zone Area - The area that will activate the zone. This should be a plane with the mesh renderer removed and the collider set to trigger. Camera Blend Time - When entering a zone, the time it takes to blend to the new camera Camera Blend Style - The blend style to use when changing to the new camera Stationary Camera Position - If the camera type is set to stationary, the position of the camera Camera Type - The type of camera to be used in the zone Camera LookAt - The object you want the camera to look at while in the zone, if the camera type is stationary this can be empty to just use the position of the camera Camera LookAt Rotation - If the camera type is set to overhead, a look at rotation is needed so the camera isn't looking straight down. This provides a top down view offset Overhead Camera Distance - When using the overhead camera, this sets how far away the camera is Magnet Cam If Climbing - If the camera type is stationary and the player is climbing with magnet mode, switch to the magnet cam or stay in stationary cam Control Change Wait For Blend - When entering a zone, the controls will change to be relative to the new camera. Enabling this setting will wait to change the controls until the camera is completely finished blending Override Default Movement - Enable this setting to override the movement controls for the zone Movement Override - If Override default movement is enabled, control the new movement with these settings Override Default Abilities - Enable this setting to override the player abilities for the zone Abilities Override - If Override default abilities is enabled, control the new abilities with these settings Halfpipe Boost Enabled - Enables the option to incrementally increase boost strength while on a half pipe in order to go higher with each successful boost Halfpipe Boost - If halfpipe boost enabled use these settings to control the boost","title":"Camera Zone Options"},{"location":"camera_zones/camera-zone-options/#camera-zone-options","text":"Zone Area - The area that will activate the zone. This should be a plane with the mesh renderer removed and the collider set to trigger. Camera Blend Time - When entering a zone, the time it takes to blend to the new camera Camera Blend Style - The blend style to use when changing to the new camera Stationary Camera Position - If the camera type is set to stationary, the position of the camera Camera Type - The type of camera to be used in the zone Camera LookAt - The object you want the camera to look at while in the zone, if the camera type is stationary this can be empty to just use the position of the camera Camera LookAt Rotation - If the camera type is set to overhead, a look at rotation is needed so the camera isn't looking straight down. This provides a top down view offset Overhead Camera Distance - When using the overhead camera, this sets how far away the camera is Magnet Cam If Climbing - If the camera type is stationary and the player is climbing with magnet mode, switch to the magnet cam or stay in stationary cam Control Change Wait For Blend - When entering a zone, the controls will change to be relative to the new camera. Enabling this setting will wait to change the controls until the camera is completely finished blending Override Default Movement - Enable this setting to override the movement controls for the zone Movement Override - If Override default movement is enabled, control the new movement with these settings Override Default Abilities - Enable this setting to override the player abilities for the zone Abilities Override - If Override default abilities is enabled, control the new abilities with these settings Halfpipe Boost Enabled - Enables the option to incrementally increase boost strength while on a half pipe in order to go higher with each successful boost Halfpipe Boost - If halfpipe boost enabled use these settings to control the boost","title":"Camera Zone Options"},{"location":"camera_zones/create-zone/","text":"Create Camera Zones \u00b6 There are multiple ways you could create camera zones. This is just an example of how I like to do it. This guide will show you how to setup a stationary camera zone. 1. Create The Zone Object \u00b6 Begin by creating a empty game object called Camera Zones. This will keep all of your zones nice and neat. Remember to zero out your empty game object if not already done. Add a plane to your Camera Zones, rename it to something meaningful Remove the mesh renderer component from the plane Change the mesh collider to convex and check the is trigger box Scale and position the plane in your scene, if the player is anywhere inside the trigger the zone will be active You should now have a scene without a layout like this. Obviously your scene will look different. Add a new empty gameobject with your zone as the parent, named Camera Position In your scene view, position your view to how you would like the camera to look. In this example I zoomed in on the zone, with a slight overhead view Select the Camera Position game object, then select game object->Align With View from the File Menu 2. Assign The Zone Object To The Prime Ball Controller \u00b6 Go to your PlayerSphere object and find Camera Zones under the Pbc Manager script component Click the plus sign to add a zone. You should now see 1 item in your list named Element 0. Expand Element 0 to display the configuration options. Give the zone a name Drag the zone plane you created back in section 1 step 3 into the Zone Area Drag the zone camera position you created back in section 1 step 8 into the Stationary Camera Position Change the Camera Type to Stationary Your finished zone should look something like this Your zone is finished.","title":"Creating A Camera Zone"},{"location":"camera_zones/create-zone/#create-camera-zones","text":"There are multiple ways you could create camera zones. This is just an example of how I like to do it. This guide will show you how to setup a stationary camera zone.","title":"Create Camera Zones"},{"location":"camera_zones/create-zone/#1-create-the-zone-object","text":"Begin by creating a empty game object called Camera Zones. This will keep all of your zones nice and neat. Remember to zero out your empty game object if not already done. Add a plane to your Camera Zones, rename it to something meaningful Remove the mesh renderer component from the plane Change the mesh collider to convex and check the is trigger box Scale and position the plane in your scene, if the player is anywhere inside the trigger the zone will be active You should now have a scene without a layout like this. Obviously your scene will look different. Add a new empty gameobject with your zone as the parent, named Camera Position In your scene view, position your view to how you would like the camera to look. In this example I zoomed in on the zone, with a slight overhead view Select the Camera Position game object, then select game object->Align With View from the File Menu","title":"1.  Create The Zone Object"},{"location":"camera_zones/create-zone/#2-assign-the-zone-object-to-the-prime-ball-controller","text":"Go to your PlayerSphere object and find Camera Zones under the Pbc Manager script component Click the plus sign to add a zone. You should now see 1 item in your list named Element 0. Expand Element 0 to display the configuration options. Give the zone a name Drag the zone plane you created back in section 1 step 3 into the Zone Area Drag the zone camera position you created back in section 1 step 8 into the Stationary Camera Position Change the Camera Type to Stationary Your finished zone should look something like this Your zone is finished.","title":"2.  Assign The Zone Object To The Prime Ball Controller"},{"location":"camera_zones/overview/","text":"Camera Zones Overview \u00b6 Camera zones are an integral part of the ball controller that allow you to change player controls and camera options depending on where the player is. It is how the sidescroll, overhead, and stationary zones of the demo scene were created. The zones are very easy to setup and you don't need to change the camera if you don't want to. Perhaps you just want to change the controls in a certain area but keep the standard camera. It is very flexible.","title":"Overview"},{"location":"camera_zones/overview/#camera-zones-overview","text":"Camera zones are an integral part of the ball controller that allow you to change player controls and camera options depending on where the player is. It is how the sidescroll, overhead, and stationary zones of the demo scene were created. The zones are very easy to setup and you don't need to change the camera if you don't want to. Perhaps you just want to change the controls in a certain area but keep the standard camera. It is very flexible.","title":"Camera Zones Overview"},{"location":"controller_options/cinemachine/","text":"Cinemachine Cameras \u00b6 The Cinemachine Cameras data repository defines which cameras are assigned to the Prime Ball Controller's available camera types. These settings should rarely need changed from their defaults. Main Camera - The cinemachine brain camera or main camera in your scene. Standard Camera - The camera that is used when rolling around and not in a zone or magnet mode. This is the most used camera. Magnet Camera - The camera that is used when in magnet mode. Magnet Ceiling Camera - The camera that is used when in magnet mode and hanging from the ceiling. Stationary Camera - A stationary camera that can be assigned to camera zones. Zoom Camera - A zoom camera that can be assigned to camera zones. Overhead Camera - An overhead camera that can be assigned to camera zones. First Person Camera - A first person camera that can be used for freelook while holding the right mouse button. Default Camera LookAt - The default lookat object for the cameras, this is typically overridden anyway and rarely used, but still important.","title":"Cinemachine Cameras"},{"location":"controller_options/cinemachine/#cinemachine-cameras","text":"The Cinemachine Cameras data repository defines which cameras are assigned to the Prime Ball Controller's available camera types. These settings should rarely need changed from their defaults. Main Camera - The cinemachine brain camera or main camera in your scene. Standard Camera - The camera that is used when rolling around and not in a zone or magnet mode. This is the most used camera. Magnet Camera - The camera that is used when in magnet mode. Magnet Ceiling Camera - The camera that is used when in magnet mode and hanging from the ceiling. Stationary Camera - A stationary camera that can be assigned to camera zones. Zoom Camera - A zoom camera that can be assigned to camera zones. Overhead Camera - An overhead camera that can be assigned to camera zones. First Person Camera - A first person camera that can be used for freelook while holding the right mouse button. Default Camera LookAt - The default lookat object for the cameras, this is typically overridden anyway and rarely used, but still important.","title":"Cinemachine Cameras"},{"location":"controller_options/input-mapping/","text":"Input Mapping \u00b6 Input mapping allows you to adjust the input controls for the sphere. The default values should allow both a Gamepad and Mouse / Keyboard to work by default. Prime Ball Controller currently uses the old input system but can easily be changed to the new input system by modifying the Input Manager script. The default controls are: Move - WASD Jump - Space Magnet Climb - Hold Right Mouse Button Sprint - Hold Left Mouse Button Boost - Hold Middle Mouse To Charge, Release To Boost Rotate Camera - Hold Left Mouse Button, While Stationary and Move Mouse Free Look / FPS Camera - Hold Right Mouse Button, While Stationary and Move Mouse The Rotate Camera and Free Look Camera buttons are by default shared with Sprint and Magnet buttons. Ideally these should be seperate buttons, but was included this way with the prefab to make things simple.","title":"Input Mapping"},{"location":"controller_options/input-mapping/#input-mapping","text":"Input mapping allows you to adjust the input controls for the sphere. The default values should allow both a Gamepad and Mouse / Keyboard to work by default. Prime Ball Controller currently uses the old input system but can easily be changed to the new input system by modifying the Input Manager script. The default controls are: Move - WASD Jump - Space Magnet Climb - Hold Right Mouse Button Sprint - Hold Left Mouse Button Boost - Hold Middle Mouse To Charge, Release To Boost Rotate Camera - Hold Left Mouse Button, While Stationary and Move Mouse Free Look / FPS Camera - Hold Right Mouse Button, While Stationary and Move Mouse The Rotate Camera and Free Look Camera buttons are by default shared with Sprint and Magnet buttons. Ideally these should be seperate buttons, but was included this way with the prefab to make things simple.","title":"Input Mapping"},{"location":"controller_options/mesh-rotation/","text":"Mesh Rotation \u00b6 These settings control the appearance of how the ball is rotating. This does not effect movement. Radius - The radius used when calculating how fast the sphere will appear to spin. A higher radius will make the ball appear to rotate slower Wheel Lean Amount - The amount to lean the mesh when turning in wheel mode Orientation Correction Increment - The amount to fix the wheel orientation transition with each fixed update Orientation Correction Start - The degree of where to starting when showing the orientation transition to wheel","title":"Mesh Rotation"},{"location":"controller_options/mesh-rotation/#mesh-rotation","text":"These settings control the appearance of how the ball is rotating. This does not effect movement. Radius - The radius used when calculating how fast the sphere will appear to spin. A higher radius will make the ball appear to rotate slower Wheel Lean Amount - The amount to lean the mesh when turning in wheel mode Orientation Correction Increment - The amount to fix the wheel orientation transition with each fixed update Orientation Correction Start - The degree of where to starting when showing the orientation transition to wheel","title":"Mesh Rotation"},{"location":"controller_options/overview/","text":"Controller Options Overview \u00b6 The options to control the sphere are all located within a single location to make it easier to find what you need to change, no need to hop around to different scripts looking for settings to change. They can all be found on the Pbc Manager script component that is attached to the PlayerSphere object, under Data Repository. They include: Input Mapping Cinemachine Cameras Standard Camera Settings Sphere Player Sphere Movement Sphere Abilities Mesh Rotation Roll Audio Use the TOC for detailed information about each option. They also have tooltips in the editor to explain their purpose.","title":"Overview"},{"location":"controller_options/overview/#controller-options-overview","text":"The options to control the sphere are all located within a single location to make it easier to find what you need to change, no need to hop around to different scripts looking for settings to change. They can all be found on the Pbc Manager script component that is attached to the PlayerSphere object, under Data Repository. They include: Input Mapping Cinemachine Cameras Standard Camera Settings Sphere Player Sphere Movement Sphere Abilities Mesh Rotation Roll Audio Use the TOC for detailed information about each option. They also have tooltips in the editor to explain their purpose.","title":"Controller Options Overview"},{"location":"controller_options/roll-audio/","text":"Roll Audio \u00b6 These settings are used to adjust the various sounds the ball makes. Roll Sound Grounded - The sound that is played while the sphere is rolling Min Pitch Grounded - The minimum pitch of the sound based on the player speed Max Pitch Grounded - The maximum pitch of the sound based on the player speed Pitch Multiplier Grounded - The pitch multiplier for each update Volume Multiplier Grounded - The volume multiplier for each update Roll Sound Air - The sound that is played while the sphere is in the air Min Pitch Air - The minimum pitch of the sound based on the player speed Max Pitch Air - The maximum pitch of the sound based on the player speed Pitch Multiplier Air - The pitch multiplier for each update Volume Multiplier Air - The volume multiplier for each update Boost Charge Released - The sound to play when a boost charge is released Boost Charging - The sound to play while charging the boost Min Pitch Boost Charging - The minimum pitch of the boost based on current charge amount Max Pitch Boost Charging - The maximum pitch of the boost based on current charge amount Full Boost Charge Pitch - The maximum pitch of the boost based on current charge amount JumpLandedSound - The sound to play after landing from a jump. Leave empty for no sound. CollisionSound - The sound to play when colliding with a wall, ceiling, or ground when the jump button was not pressed. MinimumCollisionSpeedSound - The minimum collision speed required to play the collision sound when hitting a wall or ceiling FallDistanceCollisionSound - The minimum distance the player must fall in order to play the collision sound when hitting the ground","title":"Roll Audio"},{"location":"controller_options/roll-audio/#roll-audio","text":"These settings are used to adjust the various sounds the ball makes. Roll Sound Grounded - The sound that is played while the sphere is rolling Min Pitch Grounded - The minimum pitch of the sound based on the player speed Max Pitch Grounded - The maximum pitch of the sound based on the player speed Pitch Multiplier Grounded - The pitch multiplier for each update Volume Multiplier Grounded - The volume multiplier for each update Roll Sound Air - The sound that is played while the sphere is in the air Min Pitch Air - The minimum pitch of the sound based on the player speed Max Pitch Air - The maximum pitch of the sound based on the player speed Pitch Multiplier Air - The pitch multiplier for each update Volume Multiplier Air - The volume multiplier for each update Boost Charge Released - The sound to play when a boost charge is released Boost Charging - The sound to play while charging the boost Min Pitch Boost Charging - The minimum pitch of the boost based on current charge amount Max Pitch Boost Charging - The maximum pitch of the boost based on current charge amount Full Boost Charge Pitch - The maximum pitch of the boost based on current charge amount JumpLandedSound - The sound to play after landing from a jump. Leave empty for no sound. CollisionSound - The sound to play when colliding with a wall, ceiling, or ground when the jump button was not pressed. MinimumCollisionSpeedSound - The minimum collision speed required to play the collision sound when hitting a wall or ceiling FallDistanceCollisionSound - The minimum distance the player must fall in order to play the collision sound when hitting the ground","title":"Roll Audio"},{"location":"controller_options/sphere-abilities/","text":"Sphere Abilities \u00b6 These settings control the abilities of the sphere, including sprint, jump, boost, and magnet. Sprint Multiplier - The amount the current force should be multiplied by when sprinting Sprint Enabled - Enable / Disable the sprint ability Ball Jump Force - The jump force when the control mode is Ball. Wheel Jump Force - The jump force when the control mode is Wheel Ball Slope Jump Force - The jump force when on a slope and slope jump mode is set to away from slope and the control mode is Ball Wheel Slope Jump Force - The jump force when on a slope and slope jump mode is set to away from slope and the control mode is Wheel Allow Jump Above Max Slope - Enable / Disable jumping when on a slope greater than the current control's max slope angle Jump Ceiling Force Reduction - When a player jumps and hits the ceiling, the forces that are created in the opposite direction are high, enable this to reduce force Jump Enabled - Enable / Disable jump ability Slope Jump Mode - When the player is on a slope, should the jump go in the current player direction or away from the slope Magnet Climb Force - Magnet mode climbing force. This value is relational with magnet power. If this value is too high and the magnet power is too low, the player will not stick to the wall when going around corners. Max Climb Angle - The max angle that can be climbed while in magnet mode Min Ceiling Angle - The minimum angle to be considered hanging from ceiling when in magnet mode Magnet Power - The strength of the magnet to keep the player attached to the wall. This setting is relational to magnet climb force Magnet Layer - The layers that magnet mode can be activated on Magnet Enabled - Enable / Disable Magnet ability Magnet Jump Enabled - Enable / Disable jumping away from wall / ceiling in magnet mode Magnet Jump Force - The jump force applied when in magnet mode if magnet jump is enabled Boost Multiplier - The amount of boost to add when fully charged and released Time To Full Charge - The time in seconds to fully charge a boost Boost Enabled - Enable / Disable Boost ability","title":"Sphere Abilities"},{"location":"controller_options/sphere-abilities/#sphere-abilities","text":"These settings control the abilities of the sphere, including sprint, jump, boost, and magnet. Sprint Multiplier - The amount the current force should be multiplied by when sprinting Sprint Enabled - Enable / Disable the sprint ability Ball Jump Force - The jump force when the control mode is Ball. Wheel Jump Force - The jump force when the control mode is Wheel Ball Slope Jump Force - The jump force when on a slope and slope jump mode is set to away from slope and the control mode is Ball Wheel Slope Jump Force - The jump force when on a slope and slope jump mode is set to away from slope and the control mode is Wheel Allow Jump Above Max Slope - Enable / Disable jumping when on a slope greater than the current control's max slope angle Jump Ceiling Force Reduction - When a player jumps and hits the ceiling, the forces that are created in the opposite direction are high, enable this to reduce force Jump Enabled - Enable / Disable jump ability Slope Jump Mode - When the player is on a slope, should the jump go in the current player direction or away from the slope Magnet Climb Force - Magnet mode climbing force. This value is relational with magnet power. If this value is too high and the magnet power is too low, the player will not stick to the wall when going around corners. Max Climb Angle - The max angle that can be climbed while in magnet mode Min Ceiling Angle - The minimum angle to be considered hanging from ceiling when in magnet mode Magnet Power - The strength of the magnet to keep the player attached to the wall. This setting is relational to magnet climb force Magnet Layer - The layers that magnet mode can be activated on Magnet Enabled - Enable / Disable Magnet ability Magnet Jump Enabled - Enable / Disable jumping away from wall / ceiling in magnet mode Magnet Jump Force - The jump force applied when in magnet mode if magnet jump is enabled Boost Multiplier - The amount of boost to add when fully charged and released Time To Full Charge - The time in seconds to fully charge a boost Boost Enabled - Enable / Disable Boost ability","title":"Sphere Abilities"},{"location":"controller_options/sphere-movement/","text":"Sphere Movement \u00b6 These settings control all of the aspects of movement. There are seperate settings for ball and wheel control modes to give advantages such as faster speed or higher slope limit for different modes. Control Mode - The control mode of the sphere. Hybrid mode starts off as ball movement and transitions to wheel as the player speeds up. Hybrid is recommended. Ball Brake Rate - When the control mode is currently ball, the rate at which the sphere comes to a stop when no input is received Control Switch Steps - When the control mode is set to hybrid, this controls how many steps must pass before control switches from ball to wheel MinimumControlSwitchSpeed - The minimum speed the ball must be rolling in order to switch to Wheel mode, when the control mode is set to hybrid. This setting is used with Control Switch Steps to provide more control over how the sphere transitions from ball to wheel control. Step Reset Acceleration - When the control mode is set to hybrid and the acceleration drops below this number, the control switches from wheel to ball Wheel Direction Curve - When the control mode is currently wheel, this controls how tight the sphere orbits the camera when the player is pressing directly left or directly right Wheel Rotation Velocity - When the control mode is currently wheel, this controls how long it takes for the sphere to turn in the opposite direction Ball Movement / Wheel Movement - Movement properties specific for when the ball is in ball or wheel mode Movement Force - The force applied to move the sphere Acceleration Rate - The rate at which to accelerate the sphere Acceleration Reset Rate - The rate at which the acceleration is reset back to zero when no input is received Drag - The sphere's rigidbody drag Allow Air Control - Enable / Disable air control Air Control Amount - The amount of air control. Higher number gives more control. Grounded Gravity Force - The force of gravity when the player is grounded Initial Gravity Force - The force of gravity when the player first becomes ungrounded, before the increment amount has applied Max Gravity Force - The maximum gravity force that can be applied Gravity Increment Amount - The amount of additional gravity force to add while player is falling. Max Slope Angle - The max slope angle that the sphere can roll up Minimum Slip Angle - The minimum angle that will cause the sphere roll back down a slope Max Angle Slip Multiplier - The force that prevents a player from going up a slope greater than the max slope angle. If this number is low enough the player will be able roll up the slope if there is enough momentum Minimum Slope Angle Modifier - The minimum angle required for a player to be considered on a slope, otherwise act as on flat ground Slip Force - The force applied when slipping down a slope Up Slope Speed - When going up a slope, controls if the player should go slower or at the same speed as when on flat ground Down Slope Speed - When going down a slope, controls if the player should go faster or at the same speed as when on flat ground Up Hill Multiplier - If up slope speed is set to slower, this controls how much slower to go Down Hill Multiplier - If down slope speed is set to faster, this controls how much faster to go Slope Land Slip - When jumping and landing on a slope, how much force should be transfered to roll back down. Setting to 0 will cause the player to momentarily stick before the slip force is applied. Setting this value too high will cause the player to ricochet away from the slope when landing Control Orientation - The player controls are based on the camera position. This allows you to override the controls based on a different position","title":"Sphere Movement"},{"location":"controller_options/sphere-movement/#sphere-movement","text":"These settings control all of the aspects of movement. There are seperate settings for ball and wheel control modes to give advantages such as faster speed or higher slope limit for different modes. Control Mode - The control mode of the sphere. Hybrid mode starts off as ball movement and transitions to wheel as the player speeds up. Hybrid is recommended. Ball Brake Rate - When the control mode is currently ball, the rate at which the sphere comes to a stop when no input is received Control Switch Steps - When the control mode is set to hybrid, this controls how many steps must pass before control switches from ball to wheel MinimumControlSwitchSpeed - The minimum speed the ball must be rolling in order to switch to Wheel mode, when the control mode is set to hybrid. This setting is used with Control Switch Steps to provide more control over how the sphere transitions from ball to wheel control. Step Reset Acceleration - When the control mode is set to hybrid and the acceleration drops below this number, the control switches from wheel to ball Wheel Direction Curve - When the control mode is currently wheel, this controls how tight the sphere orbits the camera when the player is pressing directly left or directly right Wheel Rotation Velocity - When the control mode is currently wheel, this controls how long it takes for the sphere to turn in the opposite direction Ball Movement / Wheel Movement - Movement properties specific for when the ball is in ball or wheel mode Movement Force - The force applied to move the sphere Acceleration Rate - The rate at which to accelerate the sphere Acceleration Reset Rate - The rate at which the acceleration is reset back to zero when no input is received Drag - The sphere's rigidbody drag Allow Air Control - Enable / Disable air control Air Control Amount - The amount of air control. Higher number gives more control. Grounded Gravity Force - The force of gravity when the player is grounded Initial Gravity Force - The force of gravity when the player first becomes ungrounded, before the increment amount has applied Max Gravity Force - The maximum gravity force that can be applied Gravity Increment Amount - The amount of additional gravity force to add while player is falling. Max Slope Angle - The max slope angle that the sphere can roll up Minimum Slip Angle - The minimum angle that will cause the sphere roll back down a slope Max Angle Slip Multiplier - The force that prevents a player from going up a slope greater than the max slope angle. If this number is low enough the player will be able roll up the slope if there is enough momentum Minimum Slope Angle Modifier - The minimum angle required for a player to be considered on a slope, otherwise act as on flat ground Slip Force - The force applied when slipping down a slope Up Slope Speed - When going up a slope, controls if the player should go slower or at the same speed as when on flat ground Down Slope Speed - When going down a slope, controls if the player should go faster or at the same speed as when on flat ground Up Hill Multiplier - If up slope speed is set to slower, this controls how much slower to go Down Hill Multiplier - If down slope speed is set to faster, this controls how much faster to go Slope Land Slip - When jumping and landing on a slope, how much force should be transfered to roll back down. Setting to 0 will cause the player to momentarily stick before the slip force is applied. Setting this value too high will cause the player to ricochet away from the slope when landing Control Orientation - The player controls are based on the camera position. This allows you to override the controls based on a different position","title":"Sphere Movement"},{"location":"controller_options/sphere-player/","text":"Sphere Player \u00b6 The sphere player settings are only used to set the ground check parameters. GroundCheckRadiusMultiplier - The amount to multiply the sphere's radius by to check for ground GroundCheckDistance - The distance the sphere cast should travel to check for ground FpsCamMagnetCheckDistance - Only needed if magnet mode and fps camera are assigned to the same button. The distance to check for a magnet layer to prevent the fps camera from taking over during magnet mode. FpsCameraEnabled - Enable / Disable the fps camera option RotateCameraEnabled - Enable / Disable the rotate camera option MaximumSpeedAllowCameraRotate - The maximum speed for the sphere while still being allowed to use the camera rotate ability MaximumSpeedAllowFpsCamera - The maximum speed for the sphere while still being allowed to use the fps camera ability MinimumSphereFadeDistance - The minimum distance b/w the camera and the sphere where the sphere will become transparent SphereFadedMaterial - The material to apply to the sphere to make it transparent","title":"Sphere Player"},{"location":"controller_options/sphere-player/#sphere-player","text":"The sphere player settings are only used to set the ground check parameters. GroundCheckRadiusMultiplier - The amount to multiply the sphere's radius by to check for ground GroundCheckDistance - The distance the sphere cast should travel to check for ground FpsCamMagnetCheckDistance - Only needed if magnet mode and fps camera are assigned to the same button. The distance to check for a magnet layer to prevent the fps camera from taking over during magnet mode. FpsCameraEnabled - Enable / Disable the fps camera option RotateCameraEnabled - Enable / Disable the rotate camera option MaximumSpeedAllowCameraRotate - The maximum speed for the sphere while still being allowed to use the camera rotate ability MaximumSpeedAllowFpsCamera - The maximum speed for the sphere while still being allowed to use the fps camera ability MinimumSphereFadeDistance - The minimum distance b/w the camera and the sphere where the sphere will become transparent SphereFadedMaterial - The material to apply to the sphere to make it transparent","title":"Sphere Player"},{"location":"controller_options/standard-camera-settings/","text":"Standard Camera Settings \u00b6 These settings allow you to gain some control over the standard camera. This has no effect on any of the other cameras. Stationary Vertical Distance - The vertical distance of the camera when the player is stationary Stationary Leading Distance - The leading distance of the camera when the player is stationary Moving Vertical Distance - The vertical distance of the camera when the player is moving Moving Leading Distance - The leading distance of the camera when the player is moving Max Speed Vertical Distance - The vertical distance of the camera when player is at max speed Max Speed Leading Distance - The leading distance of the camera when the player is at max speed Final Position Damp Time - The damping used when following the player Distance Damp Time - The damping used when adjusting the vertical and leading distance Manual Rotation Sensitivity - The sensitivity when the player manually adjusts the camera rotation","title":"Standard Camera Settings"},{"location":"controller_options/standard-camera-settings/#standard-camera-settings","text":"These settings allow you to gain some control over the standard camera. This has no effect on any of the other cameras. Stationary Vertical Distance - The vertical distance of the camera when the player is stationary Stationary Leading Distance - The leading distance of the camera when the player is stationary Moving Vertical Distance - The vertical distance of the camera when the player is moving Moving Leading Distance - The leading distance of the camera when the player is moving Max Speed Vertical Distance - The vertical distance of the camera when player is at max speed Max Speed Leading Distance - The leading distance of the camera when the player is at max speed Final Position Damp Time - The damping used when following the player Distance Damp Time - The damping used when adjusting the vertical and leading distance Manual Rotation Sensitivity - The sensitivity when the player manually adjusts the camera rotation","title":"Standard Camera Settings"},{"location":"installation/basic-installation/","text":"Basic Installation Directions \u00b6 In the following sequence, steps 1 and 2 are interchangable. It doesn't matter if Cinemachine is installed before you import Prime Ball Controller. Install Cinemachine Import the Prime Ball Controller Package Drag the PlayerSphere prefab into your scene. The prefab is located at Assets->Magaeric Solutions->Prime Ball Controller->PlayerSphere->Prefabs . If your scene already has a Main Camera, remove or disable it. The prefab has all of the needed cameras included with it. If your project is already using Cinemachine and you need to keep your existing Main Camera / Cinemachine Brain, follow these steps . That's it for the installation. Happy rolling! If you need more help, use the Detailed setup guide. Your Prime Ball Controller in now ready to use. Check the Input Mapping Page for the default controls and directions to change them.","title":"Basic Setup"},{"location":"installation/basic-installation/#basic-installation-directions","text":"In the following sequence, steps 1 and 2 are interchangable. It doesn't matter if Cinemachine is installed before you import Prime Ball Controller. Install Cinemachine Import the Prime Ball Controller Package Drag the PlayerSphere prefab into your scene. The prefab is located at Assets->Magaeric Solutions->Prime Ball Controller->PlayerSphere->Prefabs . If your scene already has a Main Camera, remove or disable it. The prefab has all of the needed cameras included with it. If your project is already using Cinemachine and you need to keep your existing Main Camera / Cinemachine Brain, follow these steps . That's it for the installation. Happy rolling! If you need more help, use the Detailed setup guide. Your Prime Ball Controller in now ready to use. Check the Input Mapping Page for the default controls and directions to change them.","title":"Basic Installation Directions"},{"location":"installation/builtin-urp-hdrp/","text":"Using Different Render Pipelines (Built-In, URP, HDRP) \u00b6 The Prefab that comes by default was made for the Built-In render pipeline. If you need to use URP or HDRP just import the unity package located in the Prefab folder that corresponds to your render pipeline. When importing, leave all checked boxes as is. This will overwrite the built-in materials with the correct materials for your pipeline.","title":"Using Different Render Pipelines"},{"location":"installation/builtin-urp-hdrp/#using-different-render-pipelines-built-in-urp-hdrp","text":"The Prefab that comes by default was made for the Built-In render pipeline. If you need to use URP or HDRP just import the unity package located in the Prefab folder that corresponds to your render pipeline. When importing, leave all checked boxes as is. This will overwrite the built-in materials with the correct materials for your pipeline.","title":"Using Different Render Pipelines (Built-In, URP, HDRP)"},{"location":"installation/detailed-installation/","text":"Detailed Installation Directions \u00b6 This guide assumes you are new Unity user and will be somewhat painful for experienced users. If you know what you are doing, use the Basic Installation Guide. 1.) Install Cinemachine \u00b6 Select Window->Package Manager from the File Menu. Change the Packages drop down to Unity Registry Select Cinemachine, then Install. 2.) Import the Prime Ball Controller Package \u00b6 Go back to your package manager and change the Packages drop down to My Assets. Find Prime Ball Controller in the list and select Download . If you don't see the package, make sure you have already purchased it from the Unity Asset Store. After the download is complete, select Import If a warning popus up about dependencies, it's just alerting you that Cinemachine will be installed automatically if you select Install/Upgrade. If you select skip, you must install it manually, if not already. Another window will open where you can select Import again. 3.) Add the PlayerSphere prefab to your scene \u00b6 Find the PlayerSphere prefab in your project located at Assets->Magaeric Solutions->Prime Ball Controller->PlayerSphere->Prefabs . Drag the PlayerSphere prefab into your scene. 4.) Delete the Main Camera in your scene. \u00b6 If your project is already using Cinemachine and you need to keep your existing Main Camera / Cinemachine Brain, follow these steps . Otherwise, continue with this guide. Find the Main Camera in your scene Select it and press delete Your Prime Ball Controller in now ready to use. Add something for your ball to roll around on and give it a try. Check the Input Mapping Page for the default controls and directions to change them.","title":"Detailed Setup"},{"location":"installation/detailed-installation/#detailed-installation-directions","text":"This guide assumes you are new Unity user and will be somewhat painful for experienced users. If you know what you are doing, use the Basic Installation Guide.","title":"Detailed Installation Directions"},{"location":"installation/detailed-installation/#1-install-cinemachine","text":"Select Window->Package Manager from the File Menu. Change the Packages drop down to Unity Registry Select Cinemachine, then Install.","title":"1.) Install Cinemachine"},{"location":"installation/detailed-installation/#2-import-the-prime-ball-controller-package","text":"Go back to your package manager and change the Packages drop down to My Assets. Find Prime Ball Controller in the list and select Download . If you don't see the package, make sure you have already purchased it from the Unity Asset Store. After the download is complete, select Import If a warning popus up about dependencies, it's just alerting you that Cinemachine will be installed automatically if you select Install/Upgrade. If you select skip, you must install it manually, if not already. Another window will open where you can select Import again.","title":"2.) Import the Prime Ball Controller Package"},{"location":"installation/detailed-installation/#3-add-the-playersphere-prefab-to-your-scene","text":"Find the PlayerSphere prefab in your project located at Assets->Magaeric Solutions->Prime Ball Controller->PlayerSphere->Prefabs . Drag the PlayerSphere prefab into your scene.","title":"3.) Add the PlayerSphere prefab to your scene"},{"location":"installation/detailed-installation/#4-delete-the-main-camera-in-your-scene","text":"If your project is already using Cinemachine and you need to keep your existing Main Camera / Cinemachine Brain, follow these steps . Otherwise, continue with this guide. Find the Main Camera in your scene Select it and press delete Your Prime Ball Controller in now ready to use. Add something for your ball to roll around on and give it a try. Check the Input Mapping Page for the default controls and directions to change them.","title":"4.) Delete the Main Camera in your scene."},{"location":"installation/installation-overview/","text":"Installation / Setup \u00b6 Installation is very simple if you are familiar with Unity. I have created a basic installation guide for those of you that are familiar with Unity as well as detailed guide for those that are just getting started with Unity and may be a little lost. Basic Setup Detailed Setup","title":"Installation / Setup"},{"location":"installation/installation-overview/#installation-setup","text":"Installation is very simple if you are familiar with Unity. I have created a basic installation guide for those of you that are familiar with Unity as well as detailed guide for those that are just getting started with Unity and may be a little lost. Basic Setup Detailed Setup","title":"Installation / Setup"},{"location":"installation/installation-previous-cinemachine/","text":"Setup With Existing Cinemachine \u00b6 If you are already using Cinemachine and want to keep your existing Camera Brain, you will need to make one adjustment to the PlayerSphere object. Remove the Main Camera from the PlayerSphere Object located at PlayerSphere->Cameras->Main Camera Select the PlayerSphere Object and find the Pbc Manager Script Expand Data Repository then Cinemachine Cameras. Drag your Main Camera into the Main Camera Position. That's it.","title":"Setup With Existing Cinemachine"},{"location":"installation/installation-previous-cinemachine/#setup-with-existing-cinemachine","text":"If you are already using Cinemachine and want to keep your existing Camera Brain, you will need to make one adjustment to the PlayerSphere object. Remove the Main Camera from the PlayerSphere Object located at PlayerSphere->Cameras->Main Camera Select the PlayerSphere Object and find the Pbc Manager Script Expand Data Repository then Cinemachine Cameras. Drag your Main Camera into the Main Camera Position. That's it.","title":"Setup With Existing Cinemachine"},{"location":"modify_mesh/custom-mesh/","text":"Using Your Own Mesh \u00b6 To use your own custom sphere mesh, you just need to replace the outer mesh object with your mesh. However, there is an important step if your sphere has a forward direction as is the case with the default sphere. If you used something like a soccer ball where there is no obvious orientation you don't need to worry about this. This issue comes from the rotation of the sphere. When exporting from Blender, it can be tricky to get the correct rotation. When you import into Unity, your object must face forward on the Z axis with no rotation applied to the mesh. See below for examples. The correct orientation. In this example, with a top down view you can see the sphere is pointing toward the Z axis with no rotation applied Incorrect Way 1. In this example, the sphere is pointing toward the Z axis, but a 90 degree rotation on the Z axis was needed to do that. This will not work. Incorrect Way 2. In this example, the rotation is set to 0, but the sphere is not pointing in the Z axis. This will not work. Finally, when you have your mesh imported correctly, you need to add the Mesh Rotation Controller script to your mesh.","title":"Using Your Own Mesh"},{"location":"modify_mesh/custom-mesh/#using-your-own-mesh","text":"To use your own custom sphere mesh, you just need to replace the outer mesh object with your mesh. However, there is an important step if your sphere has a forward direction as is the case with the default sphere. If you used something like a soccer ball where there is no obvious orientation you don't need to worry about this. This issue comes from the rotation of the sphere. When exporting from Blender, it can be tricky to get the correct rotation. When you import into Unity, your object must face forward on the Z axis with no rotation applied to the mesh. See below for examples. The correct orientation. In this example, with a top down view you can see the sphere is pointing toward the Z axis with no rotation applied Incorrect Way 1. In this example, the sphere is pointing toward the Z axis, but a 90 degree rotation on the Z axis was needed to do that. This will not work. Incorrect Way 2. In this example, the rotation is set to 0, but the sphere is not pointing in the Z axis. This will not work. Finally, when you have your mesh imported correctly, you need to add the Mesh Rotation Controller script to your mesh.","title":"Using Your Own Mesh"},{"location":"modify_mesh/size-color/","text":"Changing The Color and Size of The Sphere \u00b6 The sphere is made of 2 meshes. An inner mesh and an outer mesh. This allows you to easily swap out the colors of both the exterior and interior of the sphere. You could also replace the inner sphere with some type energy particle for a nice effect. Changing the color \u00b6 Changing the color is straitforward. Just change the material that is assigned to both the outer and inner mesh Changing the size \u00b6 The best way to change the size of the sphere involves 2 steps. Change the size of the rigidbody to your desired size, leave the outer and inner mesh alone Change the ground check radius multiplier to something slightly smaller than your rigidbody size","title":"Change Size / Color"},{"location":"modify_mesh/size-color/#changing-the-color-and-size-of-the-sphere","text":"The sphere is made of 2 meshes. An inner mesh and an outer mesh. This allows you to easily swap out the colors of both the exterior and interior of the sphere. You could also replace the inner sphere with some type energy particle for a nice effect.","title":"Changing The Color and Size of The Sphere"},{"location":"modify_mesh/size-color/#changing-the-color","text":"Changing the color is straitforward. Just change the material that is assigned to both the outer and inner mesh","title":"Changing the color"},{"location":"modify_mesh/size-color/#changing-the-size","text":"The best way to change the size of the sphere involves 2 steps. Change the size of the rigidbody to your desired size, leave the outer and inner mesh alone Change the ground check radius multiplier to something slightly smaller than your rigidbody size","title":"Changing the size"},{"location":"playersphere_object/structure-overview/","text":"PlayerSphere Game Object \u00b6 The structure of the PlayerSphere should not be modified, with the exception of the cameras object. The cameras can removed from the prefab without issue. They were just included to make it easier to get them into your project. Most of the required scripts are added dynamically and the script initialization may fail if you move things around too much. There are only 3 scripts that need to be added to your objects. Pbc Manager - This is the main initialization script and should be attached to the PlayerSphere parent object Mesh Rotation Controller - This script handles the appearance of the ball's rotation and should be attached to your mesh Standard Camera Controller - This script handles the position of the camera when using the standard camera and should be attached to your Standard Camera","title":"Structure Overview"},{"location":"playersphere_object/structure-overview/#playersphere-game-object","text":"The structure of the PlayerSphere should not be modified, with the exception of the cameras object. The cameras can removed from the prefab without issue. They were just included to make it easier to get them into your project. Most of the required scripts are added dynamically and the script initialization may fail if you move things around too much. There are only 3 scripts that need to be added to your objects. Pbc Manager - This is the main initialization script and should be attached to the PlayerSphere parent object Mesh Rotation Controller - This script handles the appearance of the ball's rotation and should be attached to your mesh Standard Camera Controller - This script handles the position of the camera when using the standard camera and should be attached to your Standard Camera","title":"PlayerSphere Game Object"}]}